[{"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/App.js":"1","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Portfolio.js":"2","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Footer.js":"3","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Header.js":"4","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Profile.js":"5","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Login.js":"6","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Dashboard.js":"7","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/reportWebVitals.js":"8","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Contact.js":"9","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/index.js":"10","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/history.js":"11","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/services/API.js":"12","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Skill.js":"13","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Client.js":"14","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Project.js":"15"},{"size":1011,"mtime":1612514064749,"results":"16","hashOfConfig":"17"},{"size":2140,"mtime":1612466545163,"results":"18","hashOfConfig":"17"},{"size":235,"mtime":1612468080504,"results":"19","hashOfConfig":"17"},{"size":647,"mtime":1612469672630,"results":"20","hashOfConfig":"17"},{"size":1825,"mtime":1612475816274,"results":"21","hashOfConfig":"17"},{"size":1198,"mtime":1612530827525,"results":"22","hashOfConfig":"17"},{"size":7436,"mtime":1612472468463,"results":"23","hashOfConfig":"17"},{"size":362,"mtime":1612340197889,"results":"24","hashOfConfig":"17"},{"size":2787,"mtime":1612530673162,"results":"25","hashOfConfig":"17"},{"size":500,"mtime":1612340197889,"results":"26","hashOfConfig":"17"},{"size":88,"mtime":1612361298627,"results":"27","hashOfConfig":"17"},{"size":2632,"mtime":1612436225910,"results":"28","hashOfConfig":"17"},{"size":1239,"mtime":1612467547418,"results":"29","hashOfConfig":"17"},{"size":1654,"mtime":1612475448754,"results":"30","hashOfConfig":"17"},{"size":2188,"mtime":1612472406791,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t1xs4h",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/App.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Portfolio.js",[],["68","69"],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Footer.js",[],["70","71"],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Header.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Profile.js",[],["72","73"],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Login.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Dashboard.js",["74","75"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport Skill from './Skill';\nimport Client from './Client';\nimport Project from './Project';\nimport '../../styles/Admin.css';\n\n// import API from '../services/API';\n\nexport default function Dashboard() {\n\n    const { handleSubmit, register } = useForm({\n        mode: 'onChange',\n      });\n\n    const [skills, setSkills] = useState([]);\n    const [clients, setClients] = useState([]);\n    const [projects, setProjects] = useState([]);\n    const [btnAddSkill, setBtnAddSkill] = useState(true);\n    const [btnAddSkillToProject, setBtnAddSkillToProject] = useState(true);\n    const [btnAddClient, setBtnAddClient] = useState(true);\n    const [btnAddProject, setBtnAddProject] = useState(true);\n\n    // useEffect(() => {\n    //     API.get('/skills/').then((res) => setSkills(res.data));\n        \n    // }, []);\n    useEffect(() => {\n        axios.get(`http://localhost:5000/skills`)\n            .then((res) => res.data)\n            .then((data) => {\n                setSkills(data);\n            });\n    },[]);\n    useEffect(() => {\n        axios.get(`http://localhost:5000/clients`)\n            .then((res) => res.data)\n            .then((data) => {\n                setClients(data);\n            });\n    },[]);\n    useEffect(() => {\n        axios.get(`http://localhost:5000/projects`)\n            .then((res) => res.data)\n            .then((data) => {\n                setProjects(data);\n            });\n    },[]);\n\n    const submitSkill = async (values) => {\n        await axios.post('http://localhost:5000/skills/', values)\n            .then(res => {\n            setSkills([...skills, res.data]);\n          });\n        await setBtnAddSkill(true);\n    }\n\n    const submitClient = async (values) => {\n        await axios.post('http://localhost:5000/clients/', values)\n            .then(res => {\n            setClients([...clients, res.data]);\n          });\n        await setBtnAddClient(true);\n    }\n    const submitProject = async (values) => {\n        values.idClient = parseInt(values.idClient);\n        await axios.post('http://localhost:5000/projects/', values)\n            .then(res => {\n            setProjects([...projects, res.data]);\n          });\n        await setBtnAddProject(true);\n    }\n\n    const deleteSkill = async (id) => {\n        // console.log(id);\n        axios.delete(`http://localhost:5000/skills/${id}`)\n            .then((res)=> setSkills(skills.filter(skill => skill.idCompetence !== id)));\n    }\n\n    const deleteProject = async (id) => {\n        // console.log(id);\n        axios.delete(`http://localhost:5000/projects/${id}`)\n            .then((res)=> setProjects(projects.filter(project => project.idProjet !== id)));\n    }\n\n    const deleteClient = async (id) => {\n        // console.log(id);\n        axios.delete(`http://localhost:5000/clients/${id}`)\n            .then((res)=> setClients(clients.filter(client => client.idClient !== id)));\n    }\n\n    return (\n        <>\n        <section className='sectionAdmin'>\n            <div>\n            <h1>Compétences</h1>\n                {skills.map(skill => {\n                    return (\n                    <div key={skill.idCompetence}>\n                        <Skill skill={skill} /><input type='button' value='X' onClick={() => deleteSkill(skill.idCompetence)} />\n                    </div>);\n                    }\n                )}\n                {btnAddSkill ? (<input className='inputBtn' type='button' value='Nouvelle Compétence' onClick={() => setBtnAddSkill(false)}/>) :\n                (<form onSubmit={handleSubmit(submitSkill)}>\n                    <input placeholder=\"Compétence\" type=\"text\" name=\"nomCompetence\" ref={register} required/>\n                    <select ref={register} name=\"niveau\">\n                        <option value='Débutant'>Débutant</option>\n                        <option value='Novice'>Novice</option>\n                        <option value='Intermédiaire'>Intermédiaire</option>\n                        <option value='Avancé'>Avancé</option>\n                        <option value='Expert'>Expert</option>\n                    </select>\n                     <input type='submit' value='Enregistrer' />\n                     <input type='button' value='X'  onClick={() => setBtnAddSkill(true)}/>\n                </form>)}\n            </div>\n        </section>\n        <section className='sectionAdmin'>\n        <div>\n            <h1>Clients</h1>\n                <div>\n                    {clients.map(client =>{\n                        return (\n                        <div key={client.idClient}>\n                            <h3>{client.nomSociete}</h3>\n                            <Client client={client} /><input type='button' value='X' onClick={() => deleteClient(client.idClient)} />\n                        </div>);\n                    })}\n                </div>\n                {btnAddClient ? (<input className='inputBtn' type='button' value='Nouveau Client' onClick={() => setBtnAddClient(false)}/>) :\n                (<form onSubmit={handleSubmit(submitClient)}>\n                    <input placeholder=\"Nom de la société\" type=\"text\" name=\"nomSociete\" ref={register} required/>\n                    <input placeholder=\"Site de la Société\" type=\"text\" name=\"urlSociete\" ref={register} />\n                    <input placeholder=\"Nom Contact\" type=\"text\" name=\"nomContact\" ref={register} required/>\n                    <input placeholder=\"Mail Contact\" type=\"text\" name=\"mailContact\" ref={register} />\n        \n                     <input type='submit' value='Enregistrer' />\n                     <input type='button' value='X'  onClick={() => setBtnAddClient(true)}/>\n                </form>)}\n            </div>\n            <div>\n                <h1>Projets</h1>\n                <div>\n                    {projects.map(project =>{\n                        return (\n                        <div key={project.idProjet}>\n                            <h3>{project.nomProjet}</h3>\n                            <Project project={project} clients={clients} /><input type='button' value='X' onClick={() => deleteProject(project.idProject)} />\n                        </div>);\n                    })}\n                </div>\n                {btnAddProject ? (<input className='inputBtn' type='button' value='Nouveau Projet' onClick={() => setBtnAddProject(false)}/>) :\n                (<form onSubmit={handleSubmit(submitProject)}>\n                    <input placeholder=\"Nom de l'application\" type=\"text\" name=\"nomProjet\" ref={register} required/>\n                    <input placeholder=\"URL de l'application\" type=\"text\" name=\"urlApp\" ref={register} />\n                    <textarea rows=\"4\" cols=\"40\" placeholder=\"Descriptif\" type=\"text\" name=\"descriptifProjet\" ref={register} required></textarea>\n                    <select ref={register} name=\"idClient\">\n                        <option value={null}></option>\n                        {clients.map(client =>{\n                            return (<option key={client.idClient} value={client.idClient}>{client.nomSociete} </option>);\n                        })}\n                    </select>\n        \n                     <input type='submit' value='Enregistrer' />\n                     <input type='button' value='X'  onClick={() => setBtnAddProject(true)}/>\n                </form>)}\n            </div>\n        </section>\n        </>\n    );\n}","/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/reportWebVitals.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/Contact.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/index.js",[],["76","77"],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/history.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/services/API.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Skill.js",["78"],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Client.js",[],"/home/autier/Documents/wildcode/checkpoint4/portfolio-front-end/src/components/admin/Project.js",["79"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport '../../styles/Admin.css';\n\nexport default function Project(props) {\n\n    const [project, setProject] = useState(props.project);\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/projects/${project.idProjet}`)\n            .then((res) => res.data)\n            .then((data) => {\n                setProject(data);\n            });\n    },[]);\n\n    const updateProject = async (value, id) => {\n        await axios.put(`http://localhost:5000/projects/${id}`, value)\n            .then(res => {\n                setProject(res.data);\n            });\n    }\n\n    const updateClientProject = async (value, id) => {\n        await axios.put(`http://localhost:5000/projects/client/${id}`, value)\n            .then(res => {\n                setProject(res.data);\n            });\n    }\n\n    return (\n    <>\n        <div>\n            <label>Projet : </label>\n            <input type=\"text\" value={project.nomProjet} onChange={(e) => {\n                updateProject({\"nomProjet\": e.target.value}, project.idProjet);\n            }} required /> \n        </div>\n        <div>\n            <label>URL : </label>\n            <input type=\"text\" value={project.urlApp} onChange={(e) => {\n                updateProject({\"urlApp\": e.target.value}, project.idProjet);\n            }} required /> \n        </div>\n        <div>\n            <label>Descriptif : </label>\n            <textarea rows=\"4\" cols=\"40\" type=\"text\" value={project.descriptifProjet} onChange={(e) => {\n                updateProject({\"descriptifProjet\": e.target.value}, project.idProjet);\n            }} required></textarea>\n        </div>\n        <div>\n            <label>Société : </label>\n            <select defaultValue={project.nomSociete} onChange={(e) => updateClientProject({\"nomSociete\": e.target.value}, project.idProjet)}>\n                <option value={null}></option>\n                {props.clients.map(client => {\n                    return (<option key={client.idClient} value={client.nomSociete}>{client.nomSociete}</option>)\n                })}\n            </select>\n        </div>                           \n        \n    </>\n    );\n}",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"82","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":21,"column":12,"nodeType":"90","messageId":"91","endLine":21,"endColumn":32},{"ruleId":"88","severity":1,"message":"92","line":21,"column":34,"nodeType":"90","messageId":"91","endLine":21,"endColumn":57},{"ruleId":"80","replacedBy":"93"},{"ruleId":"82","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":17,"column":7,"nodeType":"97","endLine":17,"endColumn":9,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":15,"column":7,"nodeType":"97","endLine":15,"endColumn":9,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],["101"],["102"],"no-unused-vars","'btnAddSkillToProject' is assigned a value but never used.","Identifier","unusedVar","'setBtnAddSkillToProject' is assigned a value but never used.",["101"],["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'skill.idCompetence'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'project.idProjet'. Either include it or remove the dependency array.",["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [skill.idCompetence]",{"range":"109","text":"110"},"Update the dependencies array to be: [project.idProjet]",{"range":"111","text":"112"},[508,510],"[skill.idCompetence]",[430,432],"[project.idProjet]"]